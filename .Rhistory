lineWidth = 0.3
patternList <- list(list(pattern="\\", lineWidth=lineWidth, density=1/3), list(pattern="x", lineWidth=lineWidth), list(pattern="-", lineWidth=lineWidth, density=1/4), list(pattern=""))
colorPalette <- colorPalette[1:4]
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
dev.new(width = w, height = h, noRStudioGD = TRUE)
plt <- scatterHatch(data = bounds, x="x", y="y", factor="cluster", pointSize=3, patternList = patternList,
colorPalette = colorPalette[1:4]) + theme_void() + labs(y= "", x = "")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- ""
plot(colorPerception)
ggsave(paste0(filePath, "zoomIn\\", perceptions[i], ".tiff"), width=w, height=h, dpi=1200)
dev.off()
dev.new(width = w, height = h, noRStudioGD = TRUE)
}
w = 2
h = 3
bounds = umapCoords[umapCoords$x < 0.7 & umapCoords$x > -1 & umapCoords$y > -1.5 & umapCoords$y < 2,]
lineWidth = 0.3
patternList <- list(list(pattern="\\", lineWidth=lineWidth), list(pattern="x", lineWidth=lineWidth), list(pattern="-", lineWidth=lineWidth, density=1/4), list(pattern=""))
colorPalette <- colorPalette[1:4]
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
dev.new(width = w, height = h, noRStudioGD = TRUE)
plt <- scatterHatch(data = bounds, x="x", y="y", factor="cluster", pointSize=3, patternList = patternList,
colorPalette = colorPalette[1:4]) + theme_void() + labs(y= "", x = "")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- ""
plot(colorPerception)
ggsave(paste0(filePath, "zoomIn\\", perceptions[i], ".tiff"), width=w, height=h, dpi=1200)
dev.off()
dev.new(width = w, height = h, noRStudioGD = TRUE)
}
origin <- readTIFF(paste0(filePath, "umaps\\origin.tiff"))
originZoom <- readTIFF(paste0(filePath, "zoomIn\\origin.tiff"))
deu <- readTIFF(paste0(filePath, "umaps\\deuteranope.tiff"))
deuZoom <- readTIFF(paste0(filePath, "zoomIn\\deuteranope.tiff"))
pro <- readTIFF(paste0(filePath, "umaps\\protanope.tiff"))
proZoom <- readTIFF(paste0(filePath, "zoomIn\\protanope.tiff"))
des <- readTIFF(paste0(filePath, "umaps\\desaturate.tiff"))
desZoom <- readTIFF(paste0(filePath, "zoomIn\\desaturate.tiff"))
par(mar=rep(0,4))
outline = matrix(c(rep(c(1), times = 3), rep(2, times = 2), rep(3, times = 3), rep(4, times = 2),
rep(5, times = 3), rep(6, times = 2), rep(7, times = 3), rep(8, times = 2)),
ncol = 10, nrow = 2, byrow = TRUE)
layout(outline)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(origin,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(originZoom,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(deu,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(deuZoom,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(pro,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(proZoom,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(des,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(desZoom,0,0,1,1)
dev.print(tiff, paste0(filePath, "umap.tiff"), width=5, height=3, units="in", res=1200)
dev.print(tiff, paste0(filePath, "umapLowRes.tiff"), width=5, height=3, units="in", res=350)
colorPalette
## Creating UMAPs for each color perception
w <- 3
h <- 3
filePath <- "C:\\umd\\scatterHatch\\figuresPaper\\umap\\"
dev.new(width=w, height=h, noRStudioGD = TRUE)
lineWidth <- 0.15
patternList <- list(list(pattern="\\", lineWidth=lineWidth*1.5), list(pattern="x", lineWidth=lineWidth), list(pattern="-", lineWidth=lineWidth, density=1/4), list(pattern=""))
colorPalette <- c("#009E73", "#E69F00", "#F0E442", "#56B4E9")
plt <- scatterHatch(umapCoords, "x", "y", factor = "cluster", legendTitle = "Cluster", pointSize=1, patternList = patternList)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, "umaps\\", perceptions[i], ".tiff"), width=w, height=h, dpi=1200)
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
w <- 3
h <- 3
filePath <- "C:\\umd\\scatterHatch\\figuresPaper\\umap\\"
dev.new(width=w, height=h, noRStudioGD = TRUE)
lineWidth <- 0.15
patternList <- list(list(pattern="\\", lineWidth=lineWidth*1.5), list(pattern="x", lineWidth=lineWidth), list(pattern="-", lineWidth=lineWidth, density=1/4), list(pattern=""))
colorPalette <- c("#009E73", "#E69F00", "#F0E442", "#56B4E9")
plt <- scatterHatch(umapCoords, "x", "y", factor = "cluster", legendTitle = "Cluster", pointSize=1, patternList = patternList, colorPalette = colorPalette)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, "umaps\\", perceptions[i], ".tiff"), width=w, height=h, dpi=1200)
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
w = 2
h = 3
bounds = umapCoords[umapCoords$x < 0.7 & umapCoords$x > -1 & umapCoords$y > -1.5 & umapCoords$y < 2,]
lineWidth = 0.3
patternList <- list(list(pattern="\\", lineWidth=lineWidth), list(pattern="x", lineWidth=lineWidth), list(pattern="-", lineWidth=lineWidth, density=1/4), list(pattern=""))
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
dev.new(width = w, height = h, noRStudioGD = TRUE)
plt <- scatterHatch(data = bounds, x="x", y="y", factor="cluster", pointSize=3, patternList = patternList,
colorPalette = colorPalette) + theme_void() + labs(y= "", x = "")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- ""
plot(colorPerception)
ggsave(paste0(filePath, "zoomIn\\", perceptions[i], ".tiff"), width=w, height=h, dpi=1200)
dev.off()
dev.new(width = w, height = h, noRStudioGD = TRUE)
}
origin <- readTIFF(paste0(filePath, "umaps\\origin.tiff"))
originZoom <- readTIFF(paste0(filePath, "zoomIn\\origin.tiff"))
deu <- readTIFF(paste0(filePath, "umaps\\deuteranope.tiff"))
deuZoom <- readTIFF(paste0(filePath, "zoomIn\\deuteranope.tiff"))
pro <- readTIFF(paste0(filePath, "umaps\\protanope.tiff"))
proZoom <- readTIFF(paste0(filePath, "zoomIn\\protanope.tiff"))
des <- readTIFF(paste0(filePath, "umaps\\desaturate.tiff"))
desZoom <- readTIFF(paste0(filePath, "zoomIn\\desaturate.tiff"))
par(mar=rep(0,4))
outline = matrix(c(rep(c(1), times = 3), rep(2, times = 2), rep(3, times = 3), rep(4, times = 2),
rep(5, times = 3), rep(6, times = 2), rep(7, times = 3), rep(8, times = 2)),
ncol = 10, nrow = 2, byrow = TRUE)
layout(outline)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(origin,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(originZoom,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(deu,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(deuZoom,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(pro,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(proZoom,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(des,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(desZoom,0,0,1,1)
dev.print(tiff, paste0(filePath, "umap.tiff"), width=5, height=3, units="in", res=1200)
dev.print(tiff, paste0(filePath, "umapLowRes.tiff"), width=5, height=3, units="in", res=350)
# Creating PDAC by frame
w = 8
h = 6
dpi = 1200
# Origin
dev.new(width = w, height = h, noRStudioGD = TRUE)
figure1 = cvdPlot(scatterHatch(pdacData, "Xt", "Yt", "frame", pointSize = 1, colorPalette = colorPalette, patternList = patternList) + theme_void() + theme(legend.position = "none") + labs(y= "", x = "") , layout = c("origin"))
figure1$layers[[2]]$data$text = "A"
plot(figure1)
ggsave(paste(pdacFrameDir, "origin.png", sep=""), width = w, height = h, dpi = dpi)
dev.off()
# deuteranope
dev.new(width = 8, height = 6, noRStudioGD = TRUE)
figure1 = cvdPlot(scatterHatch(pdacData, "Xt", "Yt", "frame", pointSize = 1, colorPalette = colorPalette, patternList = patternList) + theme_void() + theme(legend.position = "none") + labs(y= "", x = "") , layout = c("deuteranope"))
figure1$layers[[2]]$data$text = "B"
plot(figure1)
ggsave(paste(pdacFrameDir, "deuteranope.png", sep=""), width = w, height = h, dpi = dpi)
dev.off()
# protanope
dev.new(width = 8, height = 6, noRStudioGD = TRUE)
figure1 = cvdPlot(scatterHatch(pdacData, "Xt", "Yt", "frame", pointSize = 1, colorPalette = colorPalette, patternList = patternList) + theme_void() + theme(legend.position = "none") + labs(y= "", x = "") , layout = c("protanope"))
figure1$layers[[2]]$data$text = "C"
plot(figure1)
ggsave(paste(pdacFrameDir, "protanope.png", sep=""), width = w, height = h, dpi = dpi)
dev.off()
# desaturated
dev.new(width = 8, height = 6, noRStudioGD = TRUE)
figure1 = cvdPlot(scatterHatch(pdacData, "Xt", "Yt", "frame", pointSize = 1, colorPalette = colorPalette, patternList = patternList) + theme_void() + theme(legend.position = "none") + labs(y= "", x = "") , layout = c("desaturate"))
figure1$layers[[2]]$data$text = "D"
plot(figure1)
ggsave(paste(pdacFrameDir, "desaturated.png", sep=""), width = w, height = h, dpi = dpi)
dev.off()
library(ggplot2)
library(viridis)
library(ggthemes)
library(scales)
library(colorBlindness)
library(ggpubr)
pdacFrameDir = "C:\\umd\\scatterHatch\\figuresPaper\\supplementaryFigures\\suppFig3\\"
pdacData = scatterHatch::pdacData
pdacData$cellID = paste0('cell_', 1:nrow(pdacData))
pdacData$Yt <- -pdacData$Yt
pancreas_frames = c(1:6, 27:31, 15:19, 40:44)
PDAC_frames = c(23:26, 35:37, 51:52, 64:65, 77)
small_intestines_frames = c(49:50, 63, 75:76, 88:89, 100:103, 112:116, 125:129, 137:140)
annotateLocation <- function(frame){
if (frame %in% pancreas_frames){return("Pancreas")}
if (frame %in% PDAC_frames){return("PDAC")}
if (frame %in% small_intestines_frames){return("Small Intestine")}
return("Other")
}
pdacData$location = sapply(pdacData$frame, annotateLocation)
numberOfFrames = length(unique(pdacData$frame))
colorPalette = rep(dittoColors, times=ceiling(numberOfFrames/40))[1:numberOfFrames]
# changing pattern ordering
frames = unique(pdacData$frame)
patterns = c("", "\\", "x","+", "|", "/", "x", "+", "\\", "-","|", "x", "/")
reversePatterns = rev(patterns)
reversePatterns[7] = "-"
completePatterns = c()
for (j in frames){
row = ceiling(j/13)
col = j - ((row-1)*13)
# alternate between reverse/normal patterning every row
if ((row %% 2) == 1){ completePatterns = c(completePatterns, patterns[col])}
if ((row %% 2) == 0){ completePatterns = c(completePatterns, reversePatterns[col])}
}
patterns = completePatterns
patternList = vector(mode = "list", length = numberOfFrames) # initializing patternList
patternList = lapply(1:numberOfFrames, function(i){
lineType = "solid"
patternList[[i]] = list(pattern = patterns[i], lineWidth = 0.15, lineType = lineType)
})
# Creating PDAC by frame
w = 8
h = 6
dpi = 1200
# Origin
dev.new(width = w, height = h, noRStudioGD = TRUE)
figure1 = cvdPlot(scatterHatch(pdacData, "Xt", "Yt", "frame", pointSize = 1, colorPalette = colorPalette, patternList = patternList) + theme_void() + theme(legend.position = "none") + labs(y= "", x = "") , layout = c("origin"))
figure1$layers[[2]]$data$text = "A"
plot(figure1)
ggsave(paste(pdacFrameDir, "origin.png", sep=""), width = w, height = h, dpi = dpi)
dev.off()
# deuteranope
dev.new(width = 8, height = 6, noRStudioGD = TRUE)
figure1 = cvdPlot(scatterHatch(pdacData, "Xt", "Yt", "frame", pointSize = 1, colorPalette = colorPalette, patternList = patternList) + theme_void() + theme(legend.position = "none") + labs(y= "", x = "") , layout = c("deuteranope"))
figure1$layers[[2]]$data$text = "B"
plot(figure1)
ggsave(paste(pdacFrameDir, "deuteranope.png", sep=""), width = w, height = h, dpi = dpi)
dev.off()
# protanope
dev.new(width = 8, height = 6, noRStudioGD = TRUE)
figure1 = cvdPlot(scatterHatch(pdacData, "Xt", "Yt", "frame", pointSize = 1, colorPalette = colorPalette, patternList = patternList) + theme_void() + theme(legend.position = "none") + labs(y= "", x = "") , layout = c("protanope"))
figure1$layers[[2]]$data$text = "C"
plot(figure1)
ggsave(paste(pdacFrameDir, "protanope.png", sep=""), width = w, height = h, dpi = dpi)
dev.off()
# desaturated
dev.new(width = 8, height = 6, noRStudioGD = TRUE)
figure1 = cvdPlot(scatterHatch(pdacData, "Xt", "Yt", "frame", pointSize = 1, colorPalette = colorPalette, patternList = patternList) + theme_void() + theme(legend.position = "none") + labs(y= "", x = "") , layout = c("desaturate"))
figure1$layers[[2]]$data$text = "D"
plot(figure1)
ggsave(paste(pdacFrameDir, "desaturated.png", sep=""), width = w, height = h, dpi = dpi)
dev.off()
# Creating PDAC by frame
w = 8
h = 6
dpi = 1200
dev.new(width = w, height = h, noRStudioGD = TRUE)
plt <- scatterHatch(umapCoords, "x", "y", factor = "cluster", pointSize=1, patternList = patternList, colorPalette = colorPalette)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, perceptions[i], ".png"), width=w, height=h, dpi=dpi)
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
# Creating PDAC by frame
w = 8
h = 6
dpi = 1200
dev.new(width = w, height = h, noRStudioGD = TRUE)
plt <- scatterHatch(pdacData, "x", "y", factor = "frame", pointSize=1, patternList = patternList, colorPalette = colorPalette)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, perceptions[i], ".png"), width=w, height=h, dpi=dpi, bg="white")
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
# Creating PDAC by frame
w = 8
h = 6
dpi = 1200
dev.new(width = w, height = h, noRStudioGD = TRUE)
plt <- scatterHatch(pdacData, "Xt", "Yt", factor = "frame", pointSize=1, patternList = patternList, colorPalette = colorPalette)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, perceptions[i], ".png"), width=w, height=h, dpi=dpi, bg="white")
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
dev.new(width=w, height=h, noRStudioGD = TRUE)
plt <- scatterHatch(pdacData, "Xt", "Yt", factor = "frame", pointSize=1, patternList = patternList, colorPalette = colorPalette)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, perceptions[i], ".png"), width=w, height=h, dpi=dpi, bg="white")
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
# Creating PDAC by frame
w = 8
h = 6
dpi = 350
dev.new(width=w, height=h, noRStudioGD = TRUE)
plt <- scatterHatch(pdacData, "Xt", "Yt", factor = "frame", pointSize=1, patternList = patternList, colorPalette = colorPalette)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, perceptions[i], ".png"), width=w, height=h, res=dpi, bg="white")
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
w = 8
h = 6
dpi = 100
dev.new(width=w, height=h, noRStudioGD = TRUE)
plt <- scatterHatch(pdacData, "Xt", "Yt", factor = "frame", pointSize=1, patternList = patternList, colorPalette = colorPalette)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, perceptions[i], ".png"), width=w*dpi, height=h*dpi, bg="white")
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
dev.new(width=w, height=h, noRStudioGD = TRUE)
plt <- scatterHatch(pdacData, "Xt", "Yt", factor = "frame", pointSize=1, patternList = patternList, colorPalette = colorPalette)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, perceptions[i], ".png"), width=w, height=h, bg="white")
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
filePath
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, perceptions[i], ".png"), width=w, height=h, bg="white")
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
pdacFrameDir = "C:\\umd\\scatterHatch\\figuresPaper\\supplementaryFigures\\suppFig3\\"
w = 4
h = 3
dpi = 100
dev.new(width=w, height=h, noRStudioGD = TRUE)
plt <- scatterHatch(pdacData, "Xt", "Yt", factor = "frame", pointSize=1, patternList = patternList, colorPalette = colorPalette)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(filePath, perceptions[i], ".png"), width=w, height=h, bg="white")
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
pdacFrameDir
pdacFrameDir = "C:\\umd\\scatterHatch\\figuresPaper\\supplementaryFigures\\suppFig3\\"
pdacData = scatterHatch::pdacData
pdacData$cellID = paste0('cell_', 1:nrow(pdacData))
pdacData$Yt <- -pdacData$Yt
pancreas_frames = c(1:6, 27:31, 15:19, 40:44)
PDAC_frames = c(23:26, 35:37, 51:52, 64:65, 77)
small_intestines_frames = c(49:50, 63, 75:76, 88:89, 100:103, 112:116, 125:129, 137:140)
annotateLocation <- function(frame){
if (frame %in% pancreas_frames){return("Pancreas")}
if (frame %in% PDAC_frames){return("PDAC")}
if (frame %in% small_intestines_frames){return("Small Intestine")}
return("Other")
}
pdacData$location = sapply(pdacData$frame, annotateLocation)
numberOfFrames = length(unique(pdacData$frame))
colorPalette = rep(dittoColors, times=ceiling(numberOfFrames/40))[1:numberOfFrames]
# changing pattern ordering
frames = unique(pdacData$frame)
patterns = c("", "\\", "x","+", "|", "/", "x", "+", "\\", "-","|", "x", "/")
reversePatterns = rev(patterns)
reversePatterns[7] = "-"
completePatterns = c()
for (j in frames){
row = ceiling(j/13)
col = j - ((row-1)*13)
# alternate between reverse/normal patterning every row
if ((row %% 2) == 1){ completePatterns = c(completePatterns, patterns[col])}
if ((row %% 2) == 0){ completePatterns = c(completePatterns, reversePatterns[col])}
}
patterns = completePatterns
patternList = vector(mode = "list", length = numberOfFrames) # initializing patternList
patternList = lapply(1:numberOfFrames, function(i){
lineType = "solid"
patternList[[i]] = list(pattern = patterns[i], lineWidth = 0.15, lineType = lineType)
})
w = 4
h = 3
dpi = 100
dev.new(width=w, height=h, noRStudioGD = TRUE)
plt <- scatterHatch(pdacData, "Xt", "Yt", factor = "frame", pointSize=1, patternList = patternList, colorPalette = colorPalette)
plt <- plt + theme_void() + labs(y= "", x = "") + theme(legend.position = "none")
titles <- c("A", "B", "C", "D")
perceptions <- c("origin", "deuteranope", "protanope", "desaturate")
i <- 1
for (i in seq(4)){
colorPerception <- cvdPlot(plt, layout=perceptions[i])
colorPerception$layers[[2]]$data$text <- titles[i]
plot(colorPerception)
ggsave(paste0(pdacFrameDir, perceptions[i], ".png"), width=w, height=h, bg="white")
dev.off()
dev.new(width=w, height=h, noRStudioGD = TRUE)
}
library("png")
origin <- readPNG(paste(pdacFrameDir, "origin.png", sep=""))
deu <- readPNG(paste(pdacFrameDir, "deuteranope.png", sep=""))
pro <- readPNG(paste(pdacFrameDir, "protanope.png", sep=""))
des <- readPNG(paste(pdacFrameDir, "desaturated.png", sep=""))
par(mar=rep(0,4))
outline = matrix(c(rep(c(1), times = 1), rep(2, times = 1), rep(3, times = 1), rep(4, times = 1)),
ncol = 2, nrow = 2, byrow = TRUE)
layout(outline)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(origin,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(deu,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(pro,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(des,0,0,1,1)
dev.print(png, "C:\\umd\\scatterHatch\\figuresPaper\\supplementaryFigures\\Supplementary_Figure3.png", width = 786, height = 576)
library("png")
origin <- readPNG(paste(pdacFrameDir, "origin.png", sep=""))
deu <- readPNG(paste(pdacFrameDir, "deuteranope.png", sep=""))
pro <- readPNG(paste(pdacFrameDir, "protanope.png", sep=""))
des <- readPNG(paste(pdacFrameDir, "desaturate.png", sep=""))
par(mar=rep(0,4))
outline = matrix(c(rep(c(1), times = 1), rep(2, times = 1), rep(3, times = 1), rep(4, times = 1)),
ncol = 2, nrow = 2, byrow = TRUE)
layout(outline)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(origin,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(deu,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(pro,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(des,0,0,1,1)
pdacFrameDir
library("png")
origin <- readPNG(paste(pdacFrameDir, "origin.png", sep=""))
deu <- readPNG(paste(pdacFrameDir, "deuteranope.png", sep=""))
pro <- readPNG(paste(pdacFrameDir, "protanope.png", sep=""))
des <- readPNG(paste(pdacFrameDir, "desaturate.png", sep=""))
par(mar=rep(0,4))
outline = matrix(c(rep(1, times = 1), rep(2, times = 1), rep(3, times = 1), rep(4, times = 1)),
ncol = 2, nrow = 2, byrow = TRUE)
layout(outline)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(origin,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(deu,0,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(pro,0,1,1)
plot(NA,xlim=0:1,ylim=0:1,xaxt="n",yaxt="n",bty="n")
rasterImage(des,0,0,1,1)
